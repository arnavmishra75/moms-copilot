{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/configuration.service.ts","./src/app/services/validation.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { IValidationResponse } from './interfaces/ivalidation-response';\nimport { Observable } from 'rxjs';\nimport { ValidationService } from './services/validation.service';\nimport { ConfigurationService } from './services/configuration.service';\nimport { IValidationRequest } from './interfaces/ivalidation-request';\n\nconst VALIDATION = 'validation';\nconst CONFIGURATION = 'configuration (ai/ml)';\nconst HOW_IT_WORKS = 'How it works?';\nconst ABOUT_ME = 'About Me';\n\ninterface INavigationItem {\n  value: string;\n  icon: string;\n  disabled: boolean;\n}\nenum VALIDATION_TYPES {\n  YOUTUBE = 'youtube',\n  DEFAULT = '',\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'arnav-project';\n  localWordsToBlock: string[] = [];\n  cloudWordsToBlock: string[] = [];\n  whiteListUrls: string[] = [];\n  localYoutubeUrls: string[] = [];\n\n  navigationItems: INavigationItem[] = [\n    { value: VALIDATION, icon: 'assignment', disabled: false },\n    { value: CONFIGURATION, icon: 'settings', disabled: false },\n    { value: HOW_IT_WORKS, icon: 'science', disabled: true },\n    { value: ABOUT_ME, icon: 'sentiment_satisfied_alt', disabled: true },\n  ];\n\n  validationTypes: {\n    label: string;\n    value: VALIDATION_TYPES;\n    disabled: boolean;\n  }[] = [\n    { label: 'Youtube', value: VALIDATION_TYPES.YOUTUBE, disabled: false },\n    { label: 'Text', value: VALIDATION_TYPES.DEFAULT, disabled: true },\n    {\n      label: 'Music comes later',\n      value: VALIDATION_TYPES.DEFAULT,\n      disabled: true,\n    },\n    {\n      label: 'Saving comes later',\n      value: VALIDATION_TYPES.DEFAULT,\n      disabled: true,\n    },\n  ];\n  selectedValidationType: VALIDATION_TYPES = this.validationTypes[0].value;\n  isConfigPage = true;\n  isValidationPage = false;\n  private validationResponse: IValidationResponse;\n\n  constructor(\n    private validationService: ValidationService,\n    private configurationService: ConfigurationService\n  ) {}\n  ngOnInit() {\n    this.configurationService.getConfigs();\n    // Called after the constructor and called  after the first ngOnChanges()\n  }\n  onPageSelected(navItem: INavigationItem): void {\n    const selectedPage = navItem.value;\n    this.isConfigPage = selectedPage === CONFIGURATION;\n    this.isValidationPage = selectedPage === VALIDATION;\n    if (this.isConfigPage) {\n      this.configurationService.getConfigs();\n    }\n  }\n\n  onValidateText(validationTextElement: any): void {\n    // capture value\n    const inputValue = validationTextElement.value;\n    // reset value\n    validationTextElement.value = '';\n    const request: IValidationRequest = {\n      Yturl: inputValue,\n      reqtype: 'youtube',\n    };\n    this.validationService.validateQuery(request).subscribe((response) => {\n      this.validationResponse = response;\n      console.log(this.validationResponse);\n    });\n  }\n  onAddBlockWordToLocal(validationTextElement: any): void {\n    const value: string = validationTextElement.value;\n    if (!value || !value.trim()) {\n      return;\n    }\n    validationTextElement.value = '';\n    this.localWordsToBlock.push(value);\n  }\n  onAddBlockedWordsToCloud(): void {\n    this.configurationService\n      .addWordsToBlock(this.localWordsToBlock)\n      .subscribe((result) => {\n        this.cloudWordsToBlock = result;\n        this.localWordsToBlock = [];\n      });\n  }\n  onAddYoutubeUrls(urlInput: any): void {\n    const value = urlInput.value;\n    if (!value || !value.trim) {\n      return;\n    }\n    urlInput.value = '';\n    this.localYoutubeUrls.push(value);\n  }\n\n  onAddYoutubeUrlsToCloud(): void {\n    this.configurationService\n      .addWhiteListUrl(this.localYoutubeUrls)\n      .subscribe((result) => {\n        this.whiteListUrls = result;\n        this.localYoutubeUrls = [];\n      });\n  }\n}\n","<!-- https://material.angular.io/ -->\n<!-- https://material.io/resources/icons/?style=baseline -->\n<div class=\"whole-app\">\n  <div class=\"navigation-section\">\n    <div class=\"logo\">\n      <img src=\"/assets/logo.png\" alt=\"image\">\n    </div>\n    <div class=\"navigation-items\">\n      <button (click)=\"onPageSelected(item)\" mat-flat-button color=\"primary\" class=\"navigation-item\"\n        [disabled]=\"item.disabled\" *ngFor=\"let item of navigationItems\">\n        <mat-icon>{{item.icon}}</mat-icon>\n        <span>{{item.value | titlecase }}</span>\n      </button>\n    </div>\n  </div>\n  <div class=\"validation-page page\" *ngIf=\"isValidationPage\">\n\n    <mat-radio-group class=\"validation-options\" name=\"validationTypeList\" [(ngModel)]=\"selectedValidationType\">\n      <mat-radio-button class=\"validation-checkbox\" name=\"validationTypeList\" *ngFor=\"let item of validationTypes\"\n        [value]=\"item.value\" [disabled]=\"item.disabled\">\n        {{item.label}}\n      </mat-radio-button>\n    </mat-radio-group>\n    <div class=\"validation-text-input-section\">\n      <mat-form-field>\n        <mat-label>Insert the url or text here</mat-label>\n        <input matInput class=\"validation-input\" type=\"text\" placeholder=\"Insert the url or text here\"\n          #validationTextElement>\n      </mat-form-field>\n      <!-- in this case when we click the button we pass the validationTextElement to the function -->\n      <button mat-icon-button class=\"validation-submit-button\" (click)=\"onValidateText(validationTextElement)\">\n        <mat-icon>double_arrow</mat-icon>\n      </button>\n    </div>\n    <div class=\"validation-results-section\" *ngIf=\"validationResponse\">\n      <div class=\"validation-result-section\">\n        <h1 class=\"validation-result-title\">Validation Results</h1>\n        <div class=\"validation-result\">\n          <div class=\"validation-result-word-item\" *ngFor=\"let item of validationResponse.badwordcount | keyvalue\">\n            <b>{{item.key}}: {{item.value}}</b>\n          </div>\n        </div>\n        <h4>Safe reading score: {{validationResponse.safetyScore | percent }}</h4>\n      </div>\n      <div class=\"validation-raw-text-section\">\n        <h1 class=\"validation-raw-text-title\">Raw text output</h1>\n        <div class=\"validation-raw-text\">\n          {{ validationResponse.rawtext}}\n        </div>\n      </div>\n    </div>\n\n\n\n  </div>\n  <div class=\"config-page page\" *ngIf=\"isConfigPage\">\n    <div class=\"add-word-section\">\n      <h1 class=\"blacklist-section-title\">Setup Blocklisted words (for NLP Expanded Filtering)</h1>\n      <div>\n        <mat-form-field>\n          <mat-label>Add word to block</mat-label>\n          <input matInput type=\"text\" placeholder=\"Add word to block\" #wordToBlock>\n        </mat-form-field>\n        <button mat-icon-button (click)=\"onAddBlockWordToLocal(wordToBlock)\">\n          <mat-icon>double_arrow</mat-icon>\n        </button>\n      </div>\n      <div class=\"blacklist-section\">\n        <div>\n          <h3>Local blocked words</h3>\n\n          <div class=\"added-words-locally\">\n            <div class=\"word-item\" *ngFor=\"let item of localWordsToBlock\">\n              {{item}}\n            </div>\n            <button mat-icon-button class=\"validation-submit-button\" (click)=\"onAddBlockedWordsToCloud()\">\n              <mat-icon>add_circle_outline</mat-icon>\n            </button>\n          </div>\n        </div>\n        <div>\n          <h3>Cloud blocked words</h3>\n\n          <div class=\"added-words-cloud\">\n            <div class=\"word-item\" *ngFor=\"let item of cloudWordsToBlock\">\n              {{item}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"line\"></div>\n    <div>\n      <h1 class=\"whitelist-section-title\">Setup Blessed URLs (for AI Models)</h1>\n      <div class=\"add-url-section\">\n        <mat-form-field class=\"add-url-input\">\n          <mat-label>Add youtube url</mat-label>\n          <input matInput type=\"text\" placeholder=\"Add youtube urls\" #youtubeUrlsAdd>\n        </mat-form-field>\n        <button mat-icon-button (click)=\"onAddYoutubeUrls(youtubeUrlsAdd)\">\n          <mat-icon>double_arrow</mat-icon>\n        </button>\n      </div>\n\n      <div class=\"whitelist-section\">\n        <div>\n          <h3>Local clean urls</h3>\n          <div class=\"add-url-section\">\n            <div class=\"word-item\" *ngFor=\"let item of localYoutubeUrls\">\n              {{item}}\n            </div>\n            <button mat-icon-button class=\"validation-submit-button\" (click)=\"onAddYoutubeUrlsToCloud()\">\n              <mat-icon>add_circle_outline</mat-icon>\n            </button>\n          </div>\n        </div>\n        <div>\n          <h3>Cloud clean urls</h3>\n          <div class=\"add-url-section\">\n            <div class=\"word-item\" *ngFor=\"let item of whiteListUrls\">\n              {{item}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n</div>\n\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatRadioModule,\n    MatIconModule,\n    MatButtonToggleModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IAddWordsToBlockRequest } from '../interfaces/iadd-words-to-block-request';\nimport { IAddWhiteListUrlsRequest } from '../interfaces/iadd-white-list-urls-request';\nimport { IConfigurationResponse } from '../interfaces/iconfiguration-response';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigurationService {\n  baseUrl = 'https://76c949e5bc5b.ngrok.io/';\n  constructor(private http: HttpClient) {}\n\n  getConfigs(): Observable<IConfigurationResponse> {\n    console.log('getting configs');\n    const configUrlPath = 'config';\n    const configUrl = this.baseUrl + configUrlPath;\n    return this.http.get<IConfigurationResponse>(configUrl);\n  }\n\n  addWordsToBlock(wordsToBlock: string[]): Observable<string[]> {\n    console.log('words to block', wordsToBlock);\n    const addWordsToBlockUrlPath = 'rawbadwords';\n    const addWordsToBlockUrl = this.baseUrl + addWordsToBlockUrlPath;\n    const request: IAddWordsToBlockRequest = {\n      'raw-bad-words': wordsToBlock.join(','),\n    };\n    return this.http.put<string[]>(addWordsToBlockUrl, request);\n  }\n\n  clearWordsToBlock(wordsToBlock: string[]): Observable<string[]> {\n    console.log('words to block', wordsToBlock);\n    const clearWordsToBlockUrlPath = 'clearrawwords';\n    const clearWordsToBlockUrl = this.baseUrl + clearWordsToBlockUrlPath;\n    const request = {};\n    return this.http.put<string[]>(clearWordsToBlockUrl, request);\n  }\n\n  addWhiteListUrl(urlToWhiteList: string[]): Observable<string[]> {\n    console.log('url to whitelist', urlToWhiteList);\n    const addWhiteListUrlPath = 'whitelisturls';\n    const addWhiteListUrl = this.baseUrl + addWhiteListUrlPath;\n    const request: IAddWhiteListUrlsRequest = {\n      whitelisturls: urlToWhiteList.join(','),\n    };\n    return this.http.put<string[]>(addWhiteListUrl, request);\n  }\n\n  clearWhiteListUrl(urlToWhiteList: string[]): Observable<string[]> {\n    console.log('url to whitelist', urlToWhiteList);\n    const clearWhiteListUrlPath = 'whitelisturls';\n    const clearWhiteListUrl = this.baseUrl + clearWhiteListUrlPath;\n    const request = {};\n    return this.http.put<string[]>(clearWhiteListUrl, request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { IValidationResponse } from '../interfaces/ivalidation-response';\nimport { IValidationRequest } from '../interfaces/ivalidation-request';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidationService {\n  baseUrl = 'https://76c949e5bc5b.ngrok.io/';\n  constructor(private http: HttpClient) {}\n\n  validateQuery(\n    validationQuery: IValidationRequest\n  ): Observable<IValidationResponse> {\n    console.log('validationQuery', validationQuery);\n    const validationUrlPath = 'ytvalidate';\n    const validationUrl = this.baseUrl + validationUrlPath;\n    return this.http.post<IValidationResponse>(validationUrl, validationQuery);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}